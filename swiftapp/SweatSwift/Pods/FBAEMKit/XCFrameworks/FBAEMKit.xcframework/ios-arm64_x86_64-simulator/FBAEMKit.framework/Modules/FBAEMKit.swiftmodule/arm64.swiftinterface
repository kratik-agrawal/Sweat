// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FBAEMKit
@_exported import FBAEMKit
import Swift
import _Concurrency
@objcMembers @objc(FBAEMAdvertiserMultiEntryRule) final public class _AEMAdvertiserMultiEntryRule : ObjectiveC.NSObject, FBAEMKit._AEMAdvertiserRuleMatching, Foundation.NSCopying, Foundation.NSSecureCoding {
  @objc(initWithOperator:rules:) public init(with operator: FBAEMKit._AEMAdvertiserRuleOperator, rules: [FBAEMKit._AEMAdvertiserRuleMatching])
  @objc final public func isMatchedEventParameters(_ eventParams: [Swift.String : Any]?) -> Swift.Bool
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc convenience public init?(coder: Foundation.NSCoder)
  @objc final public func encode(with coder: Foundation.NSCoder)
  @objc final public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc deinit
}
@_hasMissingDesignatedInitializers @objcMembers @objc(FBAEMConfiguration) final public class _AEMConfiguration : ObjectiveC.NSObject, Foundation.NSCopying, Foundation.NSSecureCoding {
  @objc final public var cutoffTime: Swift.Int {
    get
  }
  @objc final public var validFrom: Swift.Int {
    get
  }
  @objc final public var defaultCurrency: Swift.String {
    get
  }
  @objc final public var configMode: Swift.String {
    get
  }
  @objc final public var businessID: Swift.String? {
    get
  }
  @objc final public var matchingRule: FBAEMKit._AEMAdvertiserRuleMatching? {
    get
  }
  @objc final public var conversionValueRules: [FBAEMKit._AEMRule] {
    get
  }
  @objc final public var eventSet: Swift.Set<Swift.String> {
    get
  }
  @objc final public var currencySet: Swift.Set<Swift.String> {
    get
  }
  @objc public static var ruleProvider: FBAEMKit._AEMAdvertiserRuleProviding? {
    get
  }
  @objc public static func configure(withRuleProvider ruleProvider: FBAEMKit._AEMAdvertiserRuleProviding)
  @objc(initWithJSON:) public init?(json dict: [Swift.String : Any]?)
  @objc final public func isSameValid(from validFrom: Swift.Int, businessID: Swift.String?) -> Swift.Bool
  @objc final public func isSameBusinessID(_ businessID: Swift.String?) -> Swift.Bool
  @objc final public func encode(with coder: Foundation.NSCoder)
  @objc convenience public init?(coder: Foundation.NSCoder)
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc final public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc deinit
}
@_hasMissingDesignatedInitializers @objcMembers @objc(FBAEMEvent) final public class _AEMEvent : ObjectiveC.NSObject, Foundation.NSCopying, Foundation.NSSecureCoding {
  @objc final public var eventName: Swift.String {
    get
  }
  @objc final public var values: [Swift.String : Swift.Int]? {
    get
  }
  @objc(initWithJSON:) public init?(dict: [Swift.String : Any]?)
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc convenience public init?(coder: Foundation.NSCoder)
  @objc final public func encode(with coder: Foundation.NSCoder)
  @objc final public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc override final public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers @objc(FBAEMSettings) final public class _AEMSettings : ObjectiveC.NSObject {
  @objc public static func appID() -> Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
